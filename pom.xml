<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <packaging>jar</packaging>


    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.0.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>


    <groupId>cn.com.yyxx.yld</groupId>
    <artifactId>yld-supply-v2</artifactId>
    <version>0.16.1</version>
    <name>yld-supply-v2</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
        <spring-boot-admin.version>2.1.6</spring-boot-admin.version>
        <spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
        <spring-cloud-other.version>2.1.0.RELEASE</spring-cloud-other.version>
        <mysql.version>5.1.47</mysql.version>
        <mybatis-spring-boot.version>1.3.2</mybatis-spring-boot.version>
        <mybatis-plus-boot.version>3.0.6</mybatis-plus-boot.version>
        <druid.version>1.1.14</druid.version>
        <fastjson.version>1.2.62</fastjson.version>
        <knife4j.version>2.0.2</knife4j.version>
        <!--<hutool.version>5.7.6</hutool.version> -->
        <hutool.version>4.3.0</hutool.version>
        <jodd.version>4.2.0</jodd.version>
        <velocity.version>1.7</velocity.version>
        <dockerfile-maven.version>1.4.10</dockerfile-maven.version>
        <versions-maven-plugin.version>2.7</versions-maven-plugin.version>
        <guava.google.version>20.0</guava.google.version>
        <shardingsphere.version>3.1.0</shardingsphere.version>
        <yld-micro-service-model.version>0.16.0</yld-micro-service-model.version>
        <!--        <shardingsphere.version>1.16.0</shardingsphere.version>-->
        <spring-cloud-starter-alibaba.version>2.1.4.RELEASE</spring-cloud-starter-alibaba.version>
        <skywalking.version>8.1.0</skywalking.version>
    </properties>


    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-data-mongodb</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>log4j-to-slf4j</artifactId>
                    <groupId>org.apache.logging.log4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>logback-classic</artifactId>
                    <groupId>ch.qos.logback</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!--        日志处理-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>3.3.6</version>
        </dependency>
        <dependency>
            <artifactId>commons-lang3</artifactId>
            <groupId>org.apache.commons</groupId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
            <version>${spring-cloud-other.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zipkin</artifactId>
            <version>${spring-cloud-other.version}</version>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.springframework.cloud</groupId>-->
<!--            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>-->
<!--            <version>${spring-cloud-other.version}</version>-->
<!--            <exclusions>-->
<!--                <exclusion>-->
<!--                    <artifactId>guava</artifactId>-->
<!--                    <groupId>com.google.guava</groupId>-->
<!--                </exclusion>-->
<!--                <exclusion>-->
<!--                    <artifactId>eureka-client</artifactId>-->
<!--                    <groupId>com.netflix.eureka</groupId>-->
<!--                </exclusion>-->
<!--                <exclusion>-->
<!--                    <artifactId>hystrix-core</artifactId>-->
<!--                    <groupId>com.netflix.hystrix</groupId>-->
<!--                </exclusion>-->
<!--                <exclusion>-->
<!--                    <artifactId>servo-core</artifactId>-->
<!--                    <groupId>com.netflix.servo</groupId>-->
<!--                </exclusion>-->
<!--                <exclusion>-->
<!--                    <artifactId>commons-collections</artifactId>-->
<!--                    <groupId>commons-collections</groupId>-->
<!--                </exclusion>-->
<!--                &lt;!&ndash;                <exclusion>&ndash;&gt;-->
<!--                &lt;!&ndash;                    <artifactId>commons-lang</artifactId>&ndash;&gt;-->
<!--                &lt;!&ndash;                    <groupId>commons-lang</groupId>&ndash;&gt;-->
<!--                &lt;!&ndash;                </exclusion>&ndash;&gt;-->
<!--            </exclusions>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-dependencies</artifactId>
            <version>${spring-cloud.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
            <version>${spring-cloud-other.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>archaius-core</artifactId>
                    <groupId>com.netflix.archaius</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>hystrix-core</artifactId>
                    <groupId>com.netflix.hystrix</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-fileupload</artifactId>
                    <groupId>commons-fileupload</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream</artifactId>
            <version>${spring-cloud-other.version}</version>
            <!--            <exclusions>-->
            <!--                <exclusion>-->
            <!--                    <artifactId>objenesis</artifactId>-->
            <!--                    <groupId>org.objenesis</groupId>-->
            <!--                </exclusion>-->
            <!--            </exclusions>-->
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-binder-rabbit</artifactId>
            <version>${spring-cloud-other.version}</version>
        </dependency>

        <dependency>
            <groupId>cn.com.yyxx.yld</groupId>
            <artifactId>yld-organization-data</artifactId>
            <version>${yld-micro-service-model.version}</version>
        </dependency>

        <dependency>
            <groupId>cn.com.yyxx.yld</groupId>
            <artifactId>yld-organization-model</artifactId>
            <version>${yld-micro-service-model.version}</version>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>org.springframework.cloud</groupId>-->
<!--            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>-->
<!--            <version>2.1.0.RELEASE</version>-->
<!--            <exclusions>-->
<!--                <exclusion>-->
<!--                    <groupId>com.google.guava</groupId>-->
<!--                    <artifactId>guava</artifactId>-->
<!--                </exclusion>-->
<!--            </exclusions>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
            <version>${spring-cloud-other.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>guava</artifactId>
                    <groupId>com.google.guava</groupId>
                </exclusion>
                <!--                <exclusion>-->
                <!--                    <artifactId>commons-lang</artifactId>-->
                <!--                    <groupId>commons-lang</groupId>-->
                <!--                </exclusion>-->
                <exclusion>
                    <artifactId>archaius-core</artifactId>
                    <groupId>com.netflix.archaius</groupId>
                </exclusion>
            </exclusions>
        </dependency>


        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>org.mybatis.spring.boot</groupId>-->
        <!--            <artifactId>mybatis-spring-boot-starter</artifactId>-->
        <!--            <version>${mybatis-spring-boot.version}</version>-->
        <!--            <exclusions>-->
        <!--                <exclusion>-->
        <!--                    <groupId>org.springframework.boot</groupId>-->
        <!--                    <artifactId>spring-boot-starter-logging</artifactId>-->
        <!--                </exclusion>-->
        <!--&lt;!&ndash;                <exclusion>&ndash;&gt;-->
        <!--&lt;!&ndash;                    <groupId>org.springframework.boot</groupId>&ndash;&gt;-->
        <!--&lt;!&ndash;                    <artifactId>spring-boot-starter-actuator:2.1.8.RELEASE</artifactId>&ndash;&gt;-->
        <!--&lt;!&ndash;                </exclusion>&ndash;&gt;-->
        <!--            </exclusions>-->
        <!--        </dependency>-->

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.google.version}</version>
        </dependency>


        <!-- 三方库 -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
            <version>2.5.6</version>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatis-plus-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-extension</artifactId>
            <version>${mybatis-plus-boot.version}</version>
            <scope>provided</scope>
        </dependency>


        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-spring-boot-starter</artifactId>
            <version>${knife4j.version}</version>
        </dependency>

        <!-- 三方工具类 -->
        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.4.14</version>
        </dependency>

        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-core</artifactId>
            <version>${hutool.version}</version>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-extra</artifactId>
            <version>${hutool.version}</version>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-http</artifactId>
            <version>${hutool.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jodd</groupId>
            <artifactId>jodd-core</artifactId>
            <version>${jodd.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.jcraft/jsch -->

        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-dependencies</artifactId>
            <version>${spring-boot-admin.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>

        <!-- httpclient -->
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.62</version>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>io.shardingsphere</groupId>-->
        <!--            <artifactId>sharding-jdbc-spring-boot-starter</artifactId>-->
        <!--            <version>${shardingsphere.version}</version>-->
        <!--            <exclusions>-->
        <!--                <exclusion>-->
        <!--                    <artifactId>guava</artifactId>-->
        <!--                    <groupId>com.google.guava</groupId>-->
        <!--                </exclusion>-->
        <!--                <exclusion>-->
        <!--                    <artifactId>antlr-runtime</artifactId>-->
        <!--                    <groupId>org.antlr</groupId>-->
        <!--                </exclusion>-->
        <!--            </exclusions>-->
        <!--        </dependency>-->
        <!--        &lt;!&ndash; for spring namespace &ndash;&gt;-->
        <!--        <dependency>-->
        <!--            <groupId>io.shardingsphere</groupId>-->
        <!--            <artifactId>sharding-jdbc-spring-namespace</artifactId>-->
        <!--            <version>${shardingsphere.version}</version>-->
        <!--&lt;!&ndash;            <exclusions>&ndash;&gt;-->
        <!--&lt;!&ndash;                <exclusion>&ndash;&gt;-->
        <!--&lt;!&ndash;                    <artifactId>guava</artifactId>&ndash;&gt;-->
        <!--&lt;!&ndash;                    <groupId>com.google.guava</groupId>&ndash;&gt;-->
        <!--&lt;!&ndash;                </exclusion>&ndash;&gt;-->
        <!--&lt;!&ndash;            </exclusions>&ndash;&gt;-->
        <!--        </dependency>-->

        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
            <version>${spring-cloud-starter-alibaba.version}</version>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>com.alibaba.cloud</groupId>-->
        <!--            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>-->
        <!--            <version>${spring-cloud-starter-alibaba.version}</version>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
            <version>${spring-cloud-starter-alibaba.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.skywalking</groupId>
            <artifactId>apm-toolkit-trace</artifactId>
            <version>${skywalking.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.skywalking</groupId>
            <artifactId>apm-toolkit-log4j-2.x</artifactId>
            <version>${skywalking.version}</version>
        </dependency>
        <dependency>
            <groupId>cn.com.yyxx.yld</groupId>
            <artifactId>yld-openfeign-dependencies</artifactId>
            <version>${yld-micro-service-model.version}</version>
        </dependency>

    </dependencies>


    <build>
        <finalName>yld-supply-v2</finalName>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.yml</include>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.yml</include>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <pom.registry.docker.host>harbor.yingliduo.cn</pom.registry.docker.host>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>${dockerfile-maven.version}</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <repository>${pom.registry.docker.host}/dev/${project.build.finalName}</repository>
                            <tag>${project.version}</tag>
                            <buildArgs>
                                <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                            </buildArgs>
                            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--        <profile>-->
        <!--            <id>test</id>-->
        <!--            <properties>-->
        <!--                <pom.registry.docker.host>harbor.yingliduo.cn</pom.registry.docker.host>-->
        <!--            </properties>-->
        <!--            <build>-->
        <!--                <plugins>-->
        <!--                    <plugin>-->
        <!--                        <groupId>com.spotify</groupId>-->
        <!--                        <artifactId>dockerfile-maven-plugin</artifactId>-->
        <!--                        <version>${dockerfile-maven.version}</version>-->
        <!--                        <executions>-->
        <!--                            <execution>-->
        <!--                                <id>default</id>-->
        <!--                                <goals>-->
        <!--                                    <goal>build</goal>-->
        <!--                                    <goal>push</goal>-->
        <!--                                </goals>-->
        <!--                            </execution>-->
        <!--                        </executions>-->
        <!--                        <configuration>-->
        <!--                            <repository>${pom.registry.docker.host}/test/${project.build.finalName}</repository>-->
        <!--                            <tag>${project.version}</tag>-->
        <!--                            <buildArgs>-->
        <!--                                <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>-->
        <!--                            </buildArgs>-->
        <!--                            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>-->
        <!--                        </configuration>-->
        <!--                    </plugin>-->
        <!--                </plugins>-->
        <!--            </build>-->
        <!--        </profile>-->
        <!--        <profile>-->
        <!--            <id>prod</id>-->
        <!--            <properties>-->
        <!--                <pom.registry.docker.host>harbor.yingliduo.cn</pom.registry.docker.host>-->
        <!--            </properties>-->
        <!--            <build>-->
        <!--                <plugins>-->
        <!--                    <plugin>-->
        <!--                        <groupId>com.spotify</groupId>-->
        <!--                        <artifactId>dockerfile-maven-plugin</artifactId>-->
        <!--                        <version>${dockerfile-maven.version}</version>-->
        <!--                        <executions>-->
        <!--                            <execution>-->
        <!--                                <id>default</id>-->
        <!--                                <goals>-->
        <!--                                    <goal>build</goal>-->
        <!--                                    <goal>push</goal>-->
        <!--                                </goals>-->
        <!--                            </execution>-->
        <!--                        </executions>-->
        <!--                        <configuration>-->
        <!--                            <repository>${pom.registry.docker.host}/prod/${project.build.finalName}</repository>-->
        <!--                            <tag>${project.version}</tag>-->
        <!--                            <buildArgs>-->
        <!--                                <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>-->
        <!--                            </buildArgs>-->
        <!--                            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>-->
        <!--                        </configuration>-->
        <!--                    </plugin>-->
        <!--                </plugins>-->
        <!--            </build>-->
        <!--        </profile>-->
        <!--        <profile>-->
        <!--            <id>sim</id>-->
        <!--            <properties>-->
        <!--                <pom.registry.docker.host>harbor.yingliduo.cn</pom.registry.docker.host>-->
        <!--            </properties>-->
        <!--            <build>-->
        <!--                <plugins>-->
        <!--                    <plugin>-->
        <!--                        <groupId>com.spotify</groupId>-->
        <!--                        <artifactId>dockerfile-maven-plugin</artifactId>-->
        <!--                        <version>${dockerfile-maven.version}</version>-->
        <!--                        <executions>-->
        <!--                            <execution>-->
        <!--                                <id>default</id>-->
        <!--                                <goals>-->
        <!--                                    <goal>build</goal>-->
        <!--                                    <goal>push</goal>-->
        <!--                                </goals>-->
        <!--                            </execution>-->
        <!--                        </executions>-->
        <!--                        <configuration>-->
        <!--                            <repository>${pom.registry.docker.host}/sim/${project.build.finalName}</repository>-->
        <!--                            <tag>${project.version}</tag>-->
        <!--                            <buildArgs>-->
        <!--                                <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>-->
        <!--                            </buildArgs>-->
        <!--                            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>-->
        <!--                        </configuration>-->
        <!--                    </plugin>-->
        <!--                </plugins>-->
        <!--            </build>-->
        <!--        </profile>-->
        <!--    </profiles>-->

        <!--    <repositories>-->
        <!--        <repository>-->
        <!--            <id>aliyun-maven</id>-->
        <!--            <name>aliyun-maven Repository</name>-->
        <!--            <url>http://maven.aliyun.com/nexus/content/groups/public</url>-->
        <!--        </repository>-->
        <!--        <repository>-->
        <!--            <id>spring-milestones</id>-->
        <!--            <name>Spring Milestones</name>-->
        <!--            <url>https://repo.spring.io/milestone</url>-->
        <!--        </repository>-->
        <!--        <repository>-->
        <!--            <id>Local_Nexus_Server</id>-->
        <!--            <name>YuanYuan Repository</name>-->
        <!--            <url>https://nexus.yingliduo.cn/repository/maven-public/</url>-->
        <!--            <snapshots>-->
        <!--                <updatePolicy>always</updatePolicy>-->
        <!--            </snapshots>-->
        <!--        </repository>-->
        <!--    </repositories>-->

        <!--    <distributionManagement>-->
        <!--        <repository>-->
        <!--            <id>Yyxx_Release_Repo</id>-->
        <!--            <name>Yyxx的Release仓库</name>-->
        <!--            <url>https://nexus.yingliduo.cn/repository/maven-releases/</url>-->
        <!--        </repository>-->
        <!--        <snapshotRepository>-->
        <!--            <id>Yyxx_Snapshot_Repo</id>-->
        <!--            <name>Yyxx的Snapshot仓库</name>-->
        <!--            <url>https://nexus.yingliduo.cn/repository/maven-snapshots/</url>-->
        <!--        </snapshotRepository>-->
        <!--    </distributionManagement>-->

        <profile>
            <id>test</id>
            <properties>
                <pom.registry.docker.host>harbor.yingliduo.cn</pom.registry.docker.host>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>${dockerfile-maven.version}</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <repository>${pom.registry.docker.host}/test/${project.build.finalName}</repository>
                            <tag>${project.version}</tag>
                            <buildArgs>
                                <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                            </buildArgs>
                            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <pom.registry.docker.host>harbor.yingliduo.cn</pom.registry.docker.host>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                        <version>2.2.6</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>revision</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>${dockerfile-maven.version}</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
                            <repository>${pom.registry.docker.host}/prod/${project.build.finalName}</repository>
                            <!--suppress UnresolvedMavenProperty -->
                            <tag>${git.tags}</tag>
                            <buildArgs>
                                <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                            </buildArgs>
                            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>sim</id>
            <properties>
                <pom.registry.docker.host>harbor.yingliduo.cn</pom.registry.docker.host>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>${dockerfile-maven.version}</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!--                            <repository>${pom.registry.docker.host}/yyxx/${project.build.finalName}</repository>-->
                            <repository>${pom.registry.docker.host}/sim/${project.build.finalName}</repository>
                            <tag>${project.version}</tag>
                            <buildArgs>
                                <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                            </buildArgs>
                            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>xingye</id>
            <properties>
                <pom.registry.docker.host>www.404forever.com:22022/zyz</pom.registry.docker.host>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>${dockerfile-maven.version}</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <repository>${pom.registry.docker.host}/yyxx/${project.build.finalName}</repository>
                            <tag>${project.version}</tag>
                            <buildArgs>
                                <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                            </buildArgs>
                            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                            <dockerfile>${project.basedir}/Dockerfile</dockerfile>
                            <username>admin</username>
                            <password>zyz</password>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>prod-bj</id>
            <properties>
                <!--                <pom.registry.docker.host>39.104.4.208:22020</pom.registry.docker.host>-->
                <pom.registry.docker.host>39.104.61.251:8443</pom.registry.docker.host>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>${dockerfile-maven.version}</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!--                            <repository>${pom.registry.docker.host}/yyxx/${project.build.finalName}</repository>-->
                            <repository>${pom.registry.docker.host}/test/${project.build.finalName}</repository>
                            <tag>${project.version}</tag>
                            <buildArgs>
                                <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                            </buildArgs>
                            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
        <repository>
            <id>Local_Nexus_Server</id>
            <name>YuanYuan Repository</name>
            <url>https://nexus.yingliduo.cn/repository/maven-public/</url>
            <snapshots>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>Yyxx_Release_Repo</id>
            <name>Yyxx的Release仓库</name>
            <url>https://nexus.yingliduo.cn/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>Yyxx_Snapshot_Repo</id>
            <name>Yyxx的Snapshot仓库</name>
            <url>https://nexus.yingliduo.cn/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>
