spring:
  authurl: http://organization:16200/common/query/store_info/get

  datasource:
    dynamic:
      primary: supply-master
      datasource:
        supply-master:
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://mysql.office_bj.dev.yingliduo.cn:3306/yld_supply_chain_dev?useUnicode=true&characterEncoding=utf8&useSSL=false
          username: root
          password: 123456
        #        配置从库,负责查询
        supply-slave:
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://mysql.office_bj.dev.yingliduo.cn:3306/yld_supply_chain_dev?useUnicode=true&characterEncoding=utf8&useSSL=false
          username: root
          password: 123456



#sharding:
#  jdbc:
#    datasource:
#      names: master,salve #主从数据源
#      master:
##        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.jdbc.Driver #数据库新的驱动，下面连接url一定要加区时
#        url: jdbc:mysql://192.168.50.3:22010/yld_supply_chain?useUnicode=true&characterEncoding=utf8&useSSL=false
#        username: root
#        password: "mC0HSSpJdL"
#      salve:
##        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.jdbc.Driver
#        url: jdbc:mysql://192.168.50.3:22010/yld_supply_chain?useUnicode=true&characterEncoding=utf8&useSSL=false
#        username: root
#        password: "mC0HSSpJdL"
#    config:  #读写分离配置
#      masterslave:
#        master-data-source-name: master #主数据库配置
#        slave-data-source-names: salve #从数据库配置（多个以逗号隔开）
#        load-balance-algorithm-type: round_robin # 提供轮询与随机(random)，这里选择用轮询，
#        name: ms
#      props:
#        sql:
#          show: true #打印sql日志


#  druid:
#    initial-size: 2
#    min-idle: 3
#    max-active: 20
#    max-wait: 60000
#    max-pool-prepared-statement-per-connection-size: 20
#    validation-query: SELECT 1
#    validation-query-timeout: 60000
#    test-on-borrow: false
#    test-on-return: false
#    test-while-idle: true
#    time-between-eviction-runs-millis: 50000
#    min-evictable-idle-time-millis: 300000
#    filter: config,stat,wall,slf4j
#    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrypt=false



  redis:
    database: 12
    host: 192.168.50.3
    port: 22030
    password:  # 密码（默认为空）
    timeout:
      seconds: 6 # 连接超时时长（秒）

  rabbitmq:
    username: yld
    password: yyxx@2019
    addresses: 192.168.50.3
    port: 5672

  cloud:
    nacos:
      discovery:
        enabled: true
        register-enabled: true
        server-addr: nacos-dev.yingliduo.cn:80

    stream:
      binders:
        yld-rabbit:
          type: rabbit
      bindings:
        yldOrderSaveInPut:
          destination: yld_order_save_dev
          binder: yld-rabbit
          group: yld-group
        yldOrderSaveOutPut:
          destination: yld_order_save_dev
          binder: yld-rabbit
          group: yld-group
        yldOrderUpdateInPut:
          destination: yld_order_update_dev
          binder: yld-rabbit
          group: yld-group
        yldOrderUpdateOutPut:
          destination: yld_order_update_dev
          binder: yld-rabbit
          group: yld-group
        yldAddPointOutPut:
          destination: yld_add_point_dev
          binder: yld-rabbit
          group: yld-group
        yldOrderCancelInPut:
          destination: yld_order_cancel_dev
          binder: yld-rabbit
          group: yld-group
        yldOrderCancelOutPut:
          destination: yld_order_cancel_dev
          binder: yld-rabbit

#  zipkin:
#    base-url: http://192.168.50.3:9411/
#    sender:
#      type: web
#  sleuth:
#    sampler:
#      probability: 1
#eureka:
#  client:
#    service-url:
#      defaultZone: ${ADDITIONAL_EUREKA_SERVER_LIST}
#    healthcheck:
#      enabled: true
#  instance:
#    prefer-ip-address: true
#    instance-id: (${spring.cloud.client.ip-address}):::${spring.application.name}:${server.port}----@project.version@



mybatis-plus:
  global-config:
    #刷新mapper 调试神器
    refresh: true #生产环境勿用
server:
  port: 16501

logging:
  config: classpath:log4j2/log4j2-local.xml
  level:
    org.springframework: debug
    cn.com.yyxx.yld: debug
    cn.com.yyxx.yld.scm.service.tm.impl.NaturalDayStatisticsTypeServiceImpl: debug
    cn.com.yyxx.yld.scm.service.tm.impl.OriginalDataSourceServiceImpl: debug
    cn.com.yyxx.yld.scm.service.tm.impl.AccountDayStatisticsTypeServiceImpl: debug
    cn.com.yyxx.yld.scm.service.tm.impl.DayLyDataSourceServiceImpl: debug
  file: /data/logs/supply-chain.log

security:
  oauth:
    server:
      host: ${ADDITIONAL_AUTH_HOST_NAME}
  oauth2:
    client:
      access-token-uri: ${security.oauth.server.host}/oauth/token
      user-authorization-uri: ${security.oauth.server.host}/oauth/authorize
      client-authentication-scheme: form

yld:
  basic:
    name: yld-basic-info-service
    url: http://192.168.50.3:16100
  payment:
    center:
      name: retail-payment-center-dispatch
      url: http://192.168.30.221:8800
  supervip:
    center:
      name: retail-app-member-handler-dev-wyr
      url: DESKTOP-579PGH9:8199
    discount:
      name: retail-app-finance-handler-dev-zlj
      url: http://192.168.30.23:8600
  yq:
    url: http://api-dev.yingliduo.cn/member/order_detail.html?orderNo=
#    url: http://yq_dev.yingliduo.cn/index.html?orderNo=
  smw:
    cancel_bill_url: http://member-handler:8700/member/api/cancel_bill/ORDERNO
    url: http://api-dev.yingliduo.cn/member/order_detail.html?orderNo=  #未配置，需要配置
  active_pom: dev
  scm:
    cache:
      configMap:
        static_data_def: 120
        region_def: 120
        data_dictionary_def: 120
    default:
      sync:
        isNew: true
        saleOrderTime: 300000
        offsetTime: 20
        pointDeductUrl: http://member-handler:8700/member/api/unfreeze_user_point
      summary:
        maxOnlineMoney: 5000
        diff: 15
        phones:
          - 13614725260
          - 15598368008
    pay:
      order:
        be-excluded-code: SOS_DEAL_CANCELLATION,SOS_FAILURE_TO_PAY,SOS_WAITING_PAYMENT
        statusList:
          - e158e85c66c84fb596f12c749035e870
        begin: 300000
        end:  7200000
        time-out: 300000
        count: 10000
        times: 6
      factory:
        pay-url: http://payfactory:8080/yld-pay-factory/asyncgateface
        encrypt: true
        query-url: http://payfactory:8080/yld-pay-factory/gateface
        return-notify-url: http://supplyv2:16501/common/supply/v2/pay/back
        return-notify-openId: http://supplyv2:16501/common/supply/v2/open_id/back
    wx:
      template:
        config:
          generateReport: 5quxJyHQUMnJ7g4ebshcsrXogmHSkas368o1_M4n1OA
          statisticalResult: BMow1iC_HTzwxykv_-uBUrgQM0jT51LMGU8fWGV9v70
          payResult: aEcN9-C1yxU0FC9s3xHPFfVPBCYpv_e0KwP718EwrCI
          refundResult: Jai2-5dWbwiC_CKMSiEWJgZiia26jTr3k89KwwokK0A
  productv2:
    info:
      name: yld-product-v2
      url:
  product:
    info:
      name: yld-product-info-service
      url:
  user:
    info:
      name: yld-user-info-service
      url:
  organization:
    name: yld-organization-info-service
    url:
#
#socket:
##  http: 192.168.50.3:17502
#  http: localhost:8090
#  socketip: 192.168.50.3
#  url: /receive_msg
#  port: 22221

tobacoo:
  http: 192.168.50.162:8080
  socketip:
  port: 22221
  url: /managex/send_socket.rhtml
  enable: false
